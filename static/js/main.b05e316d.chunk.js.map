{"version":3,"sources":["tweetComponents/design/Head.js","AnotherContext.js","tweetComponents/tweet/Tweet.js","tweetComponents/tweet/Tweets.js","tweetComponents/design/Form.js","tweetComponents/tweet/AddTweet.js","tweetComponents/pages/About.js","tweetComponents/pages/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["Head","props","branding","className","href","to","style","color","marginLeft","defaultProps","Context","React","createContext","reducer","state","action","type","newTweets","JSON","parse","stringify","tweets","splice","payload","console","log","window","localStorage","setItem","Provider","id","name","username","profile","tweet","dispatch","setState","getItem","this","value","children","Component","Consumer","Tweet","likes","like","liked","onDeleteClick","index","a","cursor","display","justifyContent","alignItems","float","marginTop","onClick","bind","src","alt","aria-hidden","Tweets","Fragment","map","key","FormGroup","label","placeholder","onChange","error","htmlFor","classnames","AddTweet","fileName","errors","onSubmit","e","preventDefault","uuid","objectURL","history","push","onFieldChange","target","fileChangedHandler","event","file","files","Promise","resolve","reader","FileReader","onload","result","readAsDataURL","dataUrl","Form","aria-describedby","rows","required","textAlign","userSelect","App","exact","path","component","About","NotFound","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.b05e316d.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\n\nconst Head = props => {\n  const { branding } = props\n  return (\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-3 py-10\">\n      <div className=\"container\">\n        <a href=\"/\" className=\"navbar-brand\">{ branding }</a>\n        <div>\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to=\"/\" className=\"nav-link text-dark\">\n                HOME <i className=\"fa fa-home\" style={{color:'yellow', marginLeft:5}}></i>\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/tweet\" className=\"nav-link text-dark\">\n                TWEET <i className=\"fas fa fa-twitter\" style={{color:'white', marginLeft:5}}></i>\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/about\" className=\"nav-link text-dark\" >\n                ABOUT <i className=\"fa fa-heart\" style={{color:'red', marginLeft:5}}></i>\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  )\n}\n\nHead.defaultProps = {\n  branding : ' My Tweet '\n}\n\nHead.propTypes = {\n  branding : PropTypes.string.isRequired\n}\n\nexport default Head\n","import React from 'react'\n\nconst Context = React.createContext()\n\nconst reducer = (state, action) => {\n  switch(action.type) {\n    case 'DELETE_TWEET' :\n      let newTweets = JSON.parse(JSON.stringify(state.tweets))\n      newTweets.splice(action.payload, 1)\n      console.log('DELETE_TWEET', newTweets, action.payload);\n      window.localStorage.setItem('tweets', JSON.stringify(newTweets))\n      return {\n        ...state,\n        tweets: newTweets\n      }\n\n     case 'ADD_TWEET' :\n       let tweets = [action.payload, ...state.tweets]\n       window.localStorage.setItem('tweets', JSON.stringify(tweets))\n       return {\n          ...state,\n          tweets : tweets\n        }\n\n     default :\n       return state\n  }\n}\n\nexport class Provider extends React.Component {\n  state = {\n    tweets: [\n      {\n        id: 1,\n        name:'Sujata Gunale',\n        username: '@tidbitsjs',\n        profile: null,\n        tweet: 'I know its hard. It was hard yesterday. It is hard today. It will be hard tomorrow. But as you continue to do it, day-after-day, code-after-code, guess what? You will IMPROVE. It will get easier. So buckle up and start typing on your keyboard. What needs to be done, must be done'\n      },\n      {\n        id: 2,\n        name:'Judy Hopps',\n        username: '@motivation',\n        profile: null,\n        tweet: 'When you think of your BIG goal, sometimes you start feeling overwhelmed. Why? Because big goals don’t get achieved right away. Instead, you need to create mini goals to help excite you along the way. Celebrating your small wins will help you stay motivated through your journey. Plus, celebrating is always super fun.'\n      }\n    ],\n    dispatch: action => {\n      this.setState(state => reducer(state, action))\n    }\n  }\n\n  async componentDidMount() {\n    let tweets = window.localStorage.getItem('tweets')\n    if (tweets) tweets = JSON.parse(tweets)\n    if (!tweets) tweets = []\n\n    this.setState({tweets: tweets})\n  }\n\n\n  render() {\n    return(\n      <Context.Provider value = {this.state} >\n          {this.props.children}\n      </Context.Provider>\n    )\n  }\n\n}\n\nexport const Consumer = Context.Consumer\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Consumer } from 'AnotherContext.js'\nimport 'tweetComponents/stylesheets/Style.css'\n\nclass Tweet extends Component {\n\n  state = {\n    likes : 500,\n    ...this.props.tweet\n  }\n\n  like = () => {\n    this.setState({\n      likes: this.state.liked ? this.state.likes : (this.state.likes + 1),\n      liked: !this.state.liked\n    })\n  }\n\n  onDeleteClick = async (index, dispatch) => {\n   dispatch({type: 'DELETE_TWEET', payload: index})\n  }\n\n  render() {\n\n    const { name, username, profile, tweet } = this.props.tweet\n    const { index } = this.props\n    const { likes, liked } = this.state\n\n    return(\n      <Consumer>\n\n        { value => {\n          const { dispatch } = value\n\n          return (\n\n            <div className=\"card\">\n              <div className=\"card-body\">\n              <i className=\"fa fa-times fa-2x\"\n                 style={{cursor:'pointer', display:'flex', justifyContent:'flex-end', alignItems:'flex-end' , float:'right', color:'black', marginTop: 0}}\n                 onClick={this.onDeleteClick.bind(this, index, dispatch)}></i>\n              <div className=\"info\">\n                <div className=\"imageBox\">\n                  <img src= {profile === null ? \"https://images.unsplash.com/photo-1527646736858-63d6105cf796?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=750&q=80\" : profile} className=\"rounded float-left\" alt=\"...\" />\n                   <div className=\"sub\">\n                      <h4> {name} </h4>\n                      <p> {username} </p>\n                   </div>\n                 </div>\n                </div>\n                <div className=\"text\">\n                  <p className=\"card-text\">{tweet}</p>\n                </div>\n                <div className=\"share\">\n                  <i className=\"fa fa-share-square fa-2x\" aria-hidden=\"true\"></i>\n                  <i className=\"fa fa-retweet fa-2x\" aria-hidden=\"true\"></i>\n                  <div className=\"like\"><i style={{color: liked ? 'red' : 'black'}} onClick={this.like} className=\"fa fa-heart fa-2x\" aria-hidden=\"true\"></i><p>{ likes }</p></div>\n                </div>\n              </div>\n            </div>\n\n          )\n\n        } }\n\n      </Consumer>\n\n    )\n  }\n}\n\nTweet.propTypes = {\n  tweet: PropTypes.object.isRequired\n}\n\nexport default Tweet\n","import React, { Component } from 'react'\nimport { Consumer } from 'AnotherContext.js'\nimport Tweet from 'tweetComponents/tweet/Tweet.js'\n\nclass Tweets extends Component {\n  render() {\n\n    return(\n      <Consumer>\n      { value => {\n        const { tweets } = value\n        return (\n          <React.Fragment>\n          {tweets.map((tweet, index) => <Tweet\n            key={index}\n            index={index}\n            tweet={tweet} />\n          )}\n          </React.Fragment>\n        )\n      }}\n      </Consumer>\n\n    )\n\n  }\n}\n\nexport default Tweets\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\n\nconst FormGroup = ({\n  label,\n  name,\n  type,\n  placeholder,\n  value,\n  onChange,\n  error\n}) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <input\n        type={type}\n        name={name}\n        className={classnames(\"form-control form-control-lg\", {'is-invalid': error})}\n        placeholder={placeholder}\n        value = {value}\n        onChange={onChange}\n      />\n      { error && <div className=\"invalid-feedback\">{error}</div> }\n    </div>\n  )\n}\n\nFormGroup.propTypes = {\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired\n}\n\nFormGroup.defaultProps = {\n  type: 'text'\n}\n\nexport default FormGroup\n","import React from 'react'\nimport { Consumer } from 'AnotherContext.js'\nimport FormGroup from 'tweetComponents/design/Form.js'\nimport { v1 as uuid } from 'uuid'\n\nclass AddTweet extends React.Component {\n  state = {\n    name: '',\n    username: '',\n    fileName: 'Choose File',\n    profile: null,\n    tweet: '',\n    errors: {}\n  }\n\n  onSubmit = (dispatch, e) => {\n    e.preventDefault()\n    const { name, username, profile, tweet} = this.state\n\n    console.log(profile);\n\n    if(name === '') {\n      this.setState({\n        errors: {name: 'Name is Required'}\n      })\n      return\n    }\n\n    if(username === '') {\n      this.setState({\n        errors: {username: 'Username is Required'}\n      })\n      return\n    }\n\n    const newTweet = {\n      id: uuid(),\n      name,\n      username,\n      profile,\n      tweet\n    }\n\n    dispatch({type:\"ADD_TWEET\", payload:newTweet})\n\n    this.setState({\n      name:'',\n      username:'',\n      profile: null,\n      objectURL: null,\n      tweet:'',\n      errors: {}\n    })\n\n    this.props.history.push('/')\n  }\n\n  onFieldChange = e => this.setState({ [e.target.name]: e.target.value})\n\n  fileChangedHandler = async (event) => {\n    const file = event.target.files[0]\n    console.log(file, event.target)\n    let dataUrl = await new Promise(resolve => {\n      let reader = new FileReader();\n      reader.onload = () => resolve(reader.result);\n      reader.readAsDataURL(file);\n    });\n\n    console.log('dataUrl', dataUrl)\n    this.setState({\n      fileName: file.name,\n      profile: dataUrl\n    })\n  }\n\n\n  render() {\n    const { name, username, fileName, tweet, errors } = this.state\n\n    return(\n      <Consumer>\n        {value => {\n          const { dispatch } = value\n          return(\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Add Tweet</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n\n                  <FormGroup\n                    label=\"Name\"\n                    name=\"name\"\n                    placeholder=\"Enter Name\"\n                    value={name}\n                    onChange={this.onFieldChange}\n                    error={errors.name}\n                  />\n\n                  <FormGroup\n                    label=\"Username\"\n                    name=\"username\"\n                    placeholder=\"Enter Username\"\n                    value={username}\n                    onChange={this.onFieldChange}\n                    error={errors.username}\n                  />\n\n\n                  <div className=\"input-group mb-3\">\n                    <div className=\"input-group-prepend\">\n                      <span className=\"input-group-text\" id=\"inputGroupFileAddon01\">Upload</span>\n                    </div>\n                    <div className=\"custom-file\">\n                      <input type=\"file\" onChange={this.fileChangedHandler} className=\"custom-file-input\" id=\"inputGroupFile01\" aria-describedby=\"inputGroupFileAddon01\" />\n                      <label className=\"custom-file-label\" htmlFor=\"inputGroupFile01\">{fileName}</label>\n                    </div>\n                  </div>\n\n                  <div className=\"form-group\">\n                    <label htmlFor=\"tweet\">Lets Tweet</label>\n                    <textarea\n                      className=\"form-control\"\n                      name=\"tweet\"\n                      id=\"exampleFormControlTextarea1\" rows=\"5\"\n                      value={tweet}\n                      onChange={this.onFieldChange} required></textarea>\n                  </div>\n\n                  <div style={{display:'flex', justifyContent:'center', alignItems:'center', textAlign:'center'}}>\n                    <input\n                      type=\"submit\"\n                      value=\"Tweet\"\n                      className=\"btn btn-outline-primary\"\n                    />\n                  </div>\n                </form>\n              </div>\n            </div>\n          )\n        }}\n      </Consumer>\n    )\n  }\n}\n\nexport default AddTweet\n","import React from 'react'\n\nexport default () => {\n  return(\n    <div style={{userSelect:'none'}}>\n      <h1 className=\"display-4\">About Tweets</h1>\n      <p className=\"lead\">Simple App to tweet whatever your mood favours</p>\n      <p className=\"text-secondary\">Version 1.2.0</p>\n    </div>\n  )\n}\n","import React from 'react'\n\nexport default () => {\n  return (\n    <div style={{userSelect:\"none\"}}>\n      <h1 className=\"display-4\"><span className=\"text-danger\">404</span> Page Not Found</h1>\n      <p className=\"lead\">Weird Things Happen 😂😅</p>\n      <p>Try to get along with that 😁</p>\n    </div>\n  )\n}\n","import React from 'react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport Head from 'tweetComponents/design/Head.js'\nimport Tweets from 'tweetComponents/tweet/Tweets.js'\nimport AddTweet from 'tweetComponents/tweet/AddTweet.js'\nimport About from 'tweetComponents/pages/About.js'\nimport NotFound from 'tweetComponents/pages/NotFound.js'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport { Provider } from 'AnotherContext.js'\n\nclass App extends React.Component {\n  render() {\n    return(\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Head branding='Tweet App'/>\n            <div className=\"container\">\n              <Switch>\n                <Route exact path ='/' component={Tweets} />\n                <Route path ='/tweet' component={AddTweet} />\n                <Route path ='/about' component={About} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}